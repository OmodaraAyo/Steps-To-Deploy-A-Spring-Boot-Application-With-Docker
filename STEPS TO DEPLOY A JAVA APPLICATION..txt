Steps to deploy a java application.


1. set up the environment variable on the terminal before cleaning the package


LINUX OR MACOS
export SPRING_APPLICATION_NAME=
export SPRING_DATASOURCE_URL=

â€¢ /mvnw package

WINDOWS [COMMAND PROMPT] 
set SPRING_APPLICATION_NAME=
set SPRING_DATASOURCE_URI=

mvnw package

WINDOWS [POWERSHELL]
$env:SPRING_APPLICATION_NAME=""
$env:SPRING_DATASOURCE_URL=""

./mvnw package


make sure to set up the environment variable on the terminal if you have a .env file
#for powershell
$env:DATASOURCE_URL="jdbc:postgresql://localhost:5432/(database name)"
$env:DATASOURCE_USER="username"
$env:DATASOURCE_PASSWORD="password"
$env:SERVER_PORT="8000"
$env:TEST_DATASOURCE_URL="jdbc:postgresql://localhost:5432/(databasename)"



2. ./mvnw clean package: until you get a "BUILD SUCCESSFULL" don't progress to step 3


3. Dockerize the application

########################################################
create a docker file in your folder "Dockerfile"
the folder that wraps the whole application 1.right click on it 2. new 3. file 4. filename: "Dockerfile" 


###########################################################################################

#Use an official Maven image to build the spring boot app
FROM maven:3.8.4-openjdk-17 AS build

#Set the working directory
WORKDIR /app

#Copy the pom.xml and install dependencies
COPY pom.xml .
RUN mvn dependency:go-offline

#Copy the source code and build the application
COPY src ./src
RUN mvn clean package -DskipTests

#Use an official OpenJDK image to run the application
FROM openjdk:17-jdk-slim

#Set the working directory
WORKDIR /app

#Copy the build JAR file from the build stage
COPY --from=build /app/target/file-name.jar .

#Expose port 8080
EXPOSE 8080

#Specify the command to run the application
ENTRYPOINT ["java", "-jar", "/app/notes-0.0.1-SNAPSHOT.jar"]


